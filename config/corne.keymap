/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P           &kp ESC
&kp LCTRL   &mt LGUI A  &mt LALT S  &mt LCTRL D &mt LSHFT F &kp G           &kp H       &mt LSHT J  &mt LCTRL K &mt LALT L  &mt LGUI SEMI   &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH        &sl 3
                    &lt MEDIA ESC   &lt NAV SPACE   &lt MOUSE TAB           &lt SYM RET     &lt NUM BSPC    &lt FUN DEL
            >;
        };

        NAV {
            bindings = <
&trans      &bootloader &to TAP     &to EXTRA   &to BASE    &to GAME        &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_CUT   &trans
&trans      &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none           &caps_word  &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans
&trans      &none       &kp RALT    &to NUM     &to NAV     &none           &kp INS     &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans
                                    &none       &none       &none           &kp RET     &kp BSPC    &kp DEL
            >;
        };

        MOUSE {
            bindings = <
&trans  &bootloader &to TAP     &to EXTRA   &to BASE    &to GAME            &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_UNDO  &trans
&trans  &kp LGUI    &kp LALT    &LCTRL      &LSHFT      &none               &none       &none       &none       &none       &none       &none
&trans  &none       &none       &none       &none       &none               &none       &none       &none       &none       &none       &trans
                                &none       &none       &none               &none       &none       &none
            >;
        };

        BUTTON {
            bindings = <
&trans  &kp K_UNDO  &kp K_CUT   &kp K_COPY  &kp K_PASTE &kp K_REDO          &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_UNDO  &trans
&trans  &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHIFT  &none               &none       &kp LSHIFT  &kp LCTRL   &kp LALT    &kp LGUI    &trans
&trans  &kp K_UNDO  &kp K_CUT   &kp K_COPY  &kp K_PASTE &kp K_REDO          &kp K_REDO  &kp K_PASTE &kp K_COPY  &kp K_CUT   &kp K_UNDO  &trans
                                &none       &none       &none               &none       &none       &none
            >;
        };

        MEDIA {
            bindings = <
&trans  &bootloader &to TAP     &to EXTRA   &to BASE    &to GAME            &rgb_ug RGB_TOG     &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI & rgb_ug RGI_GRI    &trans
&trans  &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none               &ext_power RP_TOG   &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_NEXT          &trans
&trans  &trans      &kp RALT    &to FUN     &to MEDIA   &none               &out OUT_TOG        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR          &trans
                                &none       &none       &none               &kp C_STOP          &kp C_PP        &kp C_MUTE
            >;
        };

        NUM {
            bindings = <
&trans  &kp LBKT    &kp N7  &kp N8  &kp N9  &kp RBKT            &to GAME  &to BASE  &to EXTRA  &to TAP  &bootloader  &trans
&trans  &kp SEMI    &kp N4  &kp N5  &kp N6  &kp EQUAL           &none  &LSHIFT  &trans  &trans  &trans   &trans
&trans  &kp GRAVE   &kp N1  &kp N2  &kp N3  &kp BSLSH           &none  &to NUM  &to NAV  &kp RALT  &none   &trans
                            &kp DOT &kp N0  &kp MINUS           &none  &trans  &trans
            >;
        };

        SYM {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans            &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &trans        &trans        &trans        &trans      &studio_unlock    &trans  &trans  &trans  &trans  &trans   &kp PSCRN
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };

        FUN {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans            &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &trans        &trans        &trans        &trans      &studio_unlock    &trans  &trans  &trans  &trans  &trans   &kp PSCRN
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };

        ADD {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans            &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &trans        &trans        &trans        &trans      &studio_unlock    &trans  &trans  &trans  &trans  &trans   &kp PSCRN
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };
    };
};

&led_strip { chain-length = <27>; };
